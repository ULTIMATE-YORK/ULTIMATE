#Note: Automatic transformation of QoS requirements to constraints and minimisation/maximisation objectives
#      is currently under development. For the time being, the user should define the constraints & objectives 
#	   within the appropriate properties (e.g., pctl, csl) file.

#Step 1:Set the probabilistic model template and the probabilistic temporal logic formulae files of the problem
PROBLEM = ULTIMATE
PROPERTIES_FILE = NONE

#Step2 : Set the algorithm (MOGA or Random) to run
	#ALGORITHM = RANDOM
	ALGORITHM = NSGAII
	#ALGORITHM = SPEA2
	#ALGORITHM = MOCELL


#Step 3: Set the population for the MOGAs
	POPULATION_SIZE = 100
	

#Step 4: Set the maximum number of evaluations
	MAX_EVALUATIONS = 100


#Step 5: Set the number of processors (for parallel execution) and initial port
	PROCESSORS = 1
	INIT_PORT = 8860
	

#Step 6: Set the directories containing the libraries of the model checker 
 	MODEL_CHECKING_ENGINE_LIBS_DIRECTORY = libs/runtime

#Step 7: Set plotting settings 
	#Note: requires Python3
	PLOT_PARETO_FRONT = TRUE
	PYTHON3_DIRECTORY = /usr/bin/python3 
#	/usr/local/bin/python3


#Step 8: Set additional settings
	VERBOSE = TRUE
	
	#Which EvoChecker engine should be used: Options: NORMAL, PARAMETRIC
	#If is absent the normal EvoChecker will be used
	#EVOCHECKER_TYPE = NORMAL
	
	
	#Option: PRISM | STORM (preference: PRISM for NORMAL, STORM for PARAMETRIC)
#	EVOCHECKER_ENGINE = PRISM
	
#	EVOCHECKER_TYPE = PARAMETRIC
#	EVOCHECKER_ENGINE = STORM

	EVOCHECKER_TYPE = ULTIMATE
	EVOCHECKER_ENGINE = ULTIMATE
	MODEL_CHECKING_ENGINE = ULTIMATE


#Step 9: Run 
	# Within your main class do:
	
	# 1) Create EvoChecker instance
	#    EvoChecker ec = new EvoChecker();
	#
	# 2) Set configuration file
	#	String configFile ="resources/config.properties"; 
	#	ec.setConfigurationFile(configFile);
	#
	# 3) Start EvoChecker
	#    ec.start();
		

#############################################################3
#Advanced Settings 
#	JAVA=/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home/bin/java

#	MODEL_CHECKING_ENGINE = libs/PrismExecutor.jar




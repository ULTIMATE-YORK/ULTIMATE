// Human supervisor model

// Model description:
// The model describes a supervisor who monitors a fleet of N mobile robots 
// tasked with independent missions. For each robot that fails, the supervisor
// attempts to intervene in order to unblock the robot gracefully. This succeeds 
// with probability pFix1. If the intervention is unsuccessful, it is retried
// for a maximum number of attempts nAttempts. If all these attempts fail, 
// a (costly) hard reset of the robot is attempted as a last resort and this
// suceeds with higher probability pFix2.

// Aim:
// This model is used to obtained the expected cost to be paid
// for a suppervisor in charge of fixing the problems experienced 
// by the fleet of mobile robots, by analysing the property:
//
// R=?[F done]

dtmc

//-- dependency parameters: probability of mission success for each robot
const double pR1;
const double pR2;

//-- external parameter
const int nAttempts;

//-- prob. human intervention or hard reset solve the problem
const double pFix1=0.7;
const double pFix2=0.9;

//-- number of robots
const int N = 2;

formula done = (robot=N+1);

module supervisor1
 w:[0..3] init 0;
 robot:[0..N+1] init 1;
 attempt : [0..10] init 0;

 // Handle robot 1
 [checkR1]   w=0 & robot=1 -> pR1:(robot'=robot+1) + (1-pR1):(w'=1);
 [checkR2]   w=0 & robot=2 -> pR2:(robot'=robot+1) + (1-pR2):(w'=1);
 // ... more robots could be checked here if needed
 [done]      w=0 & robot=N+1 -> true;

 [intervene] w=1 & attempt<nAttempts -> pFix1:(w'=0)&(robot'=min(N+1,robot+1)) + (1-pFix1):(attempt'=attempt+1);
 [giveUp]    w=1 & attempt=nAttempts -> 1:(w'=2);
 [hardReset] w=2 -> pFix2:(w'=0)&(robot'=min(N+1,robot+1)) + (1-pFix2):(w'=3);
 [fail]      w=3 -> 1:(w'=0)&(robot'=min(N+1,robot+1));
endmodule


rewards "cost"
 [intervene] true : 5;
 [hardReset] true : 30;
endrewards

rewards "failures"
 [fail] true : 1;
endrewards



